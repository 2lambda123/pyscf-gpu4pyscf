# Copyright 2024 The GPU4PySCF Authors. All Rights Reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import time

import pyscf
from pyscf import lib
from pyscf.geomopt.geometric_solver import optimize

from gpu4pyscf.dft import rks

lib.num_threads(8)

# Ritonavir
# coords in angstrom, generated by rdkit from smiles
atom = '''
C       -8.96288182       3.28831127      -2.62885503
C       -7.46920879       3.51166305      -2.39411949
C       -6.81730521       4.21158410      -3.58632179
C       -6.75343210       2.23447969      -2.02536440
N       -6.14965240       2.05608058      -0.86758873
C       -5.56561405       0.79620643      -0.81253594
C       -5.75964376       0.02569220      -1.94260019
S       -6.66807099       0.89285765      -3.10270181
C       -4.81304136       0.39887381       0.42006916
N       -3.38815351       0.70416835       0.27296099
C       -3.02823514       2.11178402       0.35287271
C       -2.45267990      -0.16029266      -0.26108521
O       -1.34412857       0.20640112      -0.64624249
N       -2.83470936      -1.47452987      -0.31785147
C       -1.98944598      -2.54919229      -0.87262957
C       -1.42081871      -2.29673045      -2.29067777
C       -0.71493076      -3.55077853      -2.82486320
C       -2.51850906      -1.88705765      -3.27801316
C       -0.89616992      -2.93346953       0.15255139
O       -0.84120432      -4.05987382       0.64177878
N       -0.00228527      -1.93292949       0.44733825
C        0.99087696      -1.99590966       1.51862016
C        0.35483717      -2.23724066       2.91061190
C       -0.74716499      -1.25906677       3.26353255
C       -2.06381416      -1.71126161       3.43421177
C       -3.08246262      -0.81805155       3.76853107
C       -2.79503846       0.53527012       3.93464465
C       -1.48937511       0.99519128       3.77003178
C       -0.46856847       0.10272441       3.43923720
C        2.08327004      -3.03185364       1.19397326
C        3.51208929      -2.65922165       1.63368951
C        4.33476689      -1.91051191       0.53961846
C        5.78269994      -1.64625453       1.02074883
C        6.67147605      -1.07919004      -0.06501718
C        7.02660004       0.27682143      -0.05239222
C        7.82434256       0.80956435      -1.06525115
C        8.27767122      -0.00751513      -2.09855533
C        7.93565323      -1.35859065      -2.11830652
C        7.13653556      -1.89356710      -1.10647417
N        3.69821702      -0.70014949       0.01627151
C        3.47269434       0.43174646       0.73185332
O        3.55387304       0.51539177       1.94867347
O        3.14957508       1.43227856      -0.11393815
C        2.90976247       2.70634314       0.49567343
C        4.20411030       3.44224030       0.52194159
C        5.12134705       3.55047191       1.54889839
N        6.25029148       4.29615732       1.27029365
C        6.17574101       4.74827177       0.03831371
S        4.77386606       4.30912258      -0.84540068
O        3.52008081      -2.00125196       2.89606186
H       -9.42564170       2.79134451      -1.76891329
H       -9.47561996       4.24461061      -2.77906289
H       -9.15047467       2.66975845      -3.51327846
H       -7.37659505       4.18865186      -1.53359895
H       -6.91773033       3.62859429      -4.50830821
H       -5.74844137       4.37535972      -3.40915053
H       -7.28176740       5.18836302      -3.75987547
H       -5.40826529      -0.97703187      -2.13821483
H       -4.97631172      -0.66355016       0.62010885
H       -5.19370847       0.94325458       1.29206987
H       -3.30131168       2.60721905      -0.58343351
H       -3.55369040       2.57996801       1.19023353
H       -1.95222468       2.23309188       0.51041797
H       -3.30726090      -1.75901934       0.52812958
H       -2.66657480      -3.41290967      -0.92551716
H       -0.67274559      -1.49642944      -2.26697779
H        0.13900121      -3.82513370      -2.19740375
H       -1.39887744      -4.40546871      -2.86346799
H       -0.33206855      -3.37927645      -3.83681431
H       -3.32143829      -2.63121743      -3.31091606
H       -2.95641077      -0.92205050      -3.00787697
H       -2.11280604      -1.78353816      -4.29028892
H       -0.22809257      -1.00384356       0.08617165
H        1.42589486      -0.99551608       1.51659705
H       -0.03892132      -3.25948027       2.97025901
H        1.11912002      -2.17404416       3.69405742
H       -2.29695585      -2.76765934       3.31513559
H       -4.09671199      -1.18006571       3.91187209
H       -3.58565443       1.23153025       4.20079674
H       -1.26297075       2.04904052       3.90757199
H        0.54793497       0.47408172       3.32785242
H        2.09735961      -3.26214155       0.12054795
H        1.81607058      -3.97692625       1.68604671
H        4.03602223      -3.60916550       1.80329311
H        4.38020694      -2.58169800      -0.32884393
H        5.78838737      -0.96895439       1.88352548
H        6.23239772      -2.58296445       1.37534776
H        6.68581279       0.93065549       0.74806024
H        8.09356548       1.86239705      -1.04212608
H        8.90214478       0.40752945      -2.88510890
H        8.29508176      -1.99692496      -2.92125186
H        6.88383103      -2.95089469      -1.13518173
H        3.75111509      -0.53790153      -0.98183482
H        2.47358600       2.60926664       1.49703594
H        2.17016502       3.23139065      -0.11883013
H        5.01905273       3.09210985       2.52651320
H        6.95170587       5.36246407      -0.39950562
H        3.50698316      -1.03208283       2.74118533

'''

xc = 'LDA_X'
bas = 'def2-svp'
auxbasis = 'def2-svp-jkfit'
scf_tol = 1e-10
max_scf_cycles = 50
screen_tol = 1e-14
grids_level = 3
mol = pyscf.M(atom=atom, basis=bas, max_memory=32000)

mol.verbose = 1
mf_GPU = rks.RKS(mol, xc=xc, disp='d3bj').density_fit(auxbasis=auxbasis)
mf_GPU.grids.level = grids_level
mf_GPU.conv_tol = scf_tol
mf_GPU.max_cycle = max_scf_cycles
mf_GPU.screen_tol = screen_tol

gradients = []


def callback(envs):
    gradients.append(envs['gradients'])


start_time = time.time()
mol_eq = optimize(mf_GPU,
                  maxsteps=200,
                  constraints='geometric_scan.txt',
                  callback=callback)
print("Optimized coordinate:")
print(mol_eq.atom_coords())
print(time.time() - start_time)
